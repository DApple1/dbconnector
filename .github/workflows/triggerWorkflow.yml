name: TRIGGER WORKFLOW
on: 
  workflow_dispatch:
    inputs:
      deployTo: 
        description: 'Environment to deploy to'
        required: true
        default: dev
      bump:
        description: 'Choose between: patch, minor, major'
        required: true
        default: patch
      dbEnvironment:
        description: 'What environment?'
        required: true
        default: dev

env:
  EVENTPATH: ${{github.event_path	}}
  WORKFLOW: ${{ github.workflow}}
  JOB: ${{ github.job }}
  RUN_ID: ${{ github.run_id }}
  RUN_NUM:  ${{ github.run_number }}
  ACTOR: ${{ github.actor }}
  REPO: ${{github.repository}}
  OWNER: ${{github.repository_owner}}
  EVENT_NAME: ${{github.event_name}}
  SHA: ${{github.sha}}
  REF: ${{github.ref}}
  WORKFLOW_REF: ${{github.event.deployment.ref}}
  HEAD_REF: ${{github.head_ref}}
  BASE_REF: ${{github.base_ref}}
  TOKEN: ${{github.token}}
  WORKSPACE: ${{github.workspace}}
  ACTION: ${{github.action}}
  TEST: 'TEST1'
  DEV: 'dev'
  QA: 'qa'
  PROD: 'prod'
  DB_ENVIRONMENT: ${{github.event.inputs.dbEnvironment}}

jobs:
  workflowTrigger:
    if: contains(github.ref, 'master') || contains(github.event.inputs.deployTo, 'dev')

    runs-on: ubuntu-latest
    steps:

      - name: Checkout
        uses: actions/checkout@master

      # Get branch name to use for tag
      - name: Extract Branch Name
        run: |
          echo "TAG_NAME=$(echo ${GITHUB_REF##*/})" >> $GITHUB_ENV
            
      - name: Echo values
        run: |
          echo "Environment: ${{ github.event.inputs.deployTo }}"
          echo "Tag: $TAG_NAME"

      - name: SHA
        run: |
          echo "${{github.sha}}"

      - name: Bump version and push tag
        uses: anothrNick/github-tag-action@1.17.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DEFAULT_BUMP: ${{ github.event.inputs.bump }}
          WITH_V: true

      - name: 'Get tag'
        id: previoustag
        uses: "WyriHaximus/github-action-get-previous-tag@master"
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

      # - name: Get the version
      #   id: get_version
      #   run: |
      #     echo ::set-env name=VERSION::${GITHUB_REF#refs/tags/}

      - name: Display the version
        id: show_version
        run: |
          echo "Latest tag version: ${{steps.prev}}"
          echo "First test: $TEST"

      # Use env var
      - name: Set env vars
        if: ${{$DB_ENVIRONMENT == $DEV}}
        run: |
          echo "TEST=TEST5" >> $GITHUB_ENV

      # Get branch name to use for tag
      - name: Extract Branch Name
        run: |
          echo "BRANCH_NAME=$(echo ${GITHUB_REF##*/})" >> $GITHUB_ENV

      - name: ECHO
        run: |
          echo "Branch: $BRANCH_NAME"
          echo "Second test: $TEST"
      # - name: Create Release
      #   id: create_release
      #   uses: actions/create-release@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     tag_name: tag
      #     release_name: Release tag
      #     body: |
      #       Changes in this Release
      #       - First Change
      #       - Second Change
      #     draft: false
      #     prerelease: false

